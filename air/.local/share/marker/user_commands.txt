./manage.py makemigrations --empty app##django datamigration
./manage.py migrate --run-syncdb##django migrate syncdb
./manage.py shell_plus --notebook##django notebook
./manamge.py test --keepdb##django test don't migrate
'/Applications/Google Chrome.app/Contents/MacOS/Google Chrome'##chrome path
basename $(git symbolic-ref --short refs/remotes/origin/HEAD)##git default branch
cat /etc/issue##display distro
chrome --headless --dump-dom https://github.com
chsh -s /bin/bash##change default shell
colrm##remove column by number
curl --resolve something.com:443:127.0.0.1 https://something.com/ --cert /etc/nginx/certs/something.crt --key /etc/nginx/certs/something.key --cacert /etc/ssl/certs/something.pem -vv##curl fake domain resolution and https
curl --unix-socket /var/run/docker.sock##curl use socket
curl -X POST -H "Content-Type: application/json" -d '{}'##curl post json
curl ifconfig.me##get my ip
do-release-upgrade##upgrade os distribution
docker ps -aq | xargs docker stop##docker stop all
docker run --rm -d -p 27017:27017 --name mongo mongo##start mongo
echo "ls -l" | at midnight##execute command at time
echo test | openssl enc -a -e -k secret | openssl enc -a -d -k secret##openssl encrypting/decrypting with keyword
env PGPASSWORD=postgres psql -h localhost -p 5432 postgres postgres##psql
env PGPASSWORD=secret psql -h localhost -p 5432 db user##psql
find . -name '.DS_Store' -type f -delete##remove all ds_store
find . -name \*.pyc -delete##find and delete all python pyc files
find . -type f -newermt "2010-01-01" ! -newermt "2010-06-01"##find files in daterange
git commit --allow-empty-message -m ''##git empty message
git commit -m $(py "'Created ' + '$(git diff --staged --name-only)'.split('/')[-1]")##git commit auto created message
git config --global core.excludesfile ~/.gitignore##global gitignore
git config --global pull.rebase true##git configure rebase
git config credential.helper store##store git pass
git config push.autosetupremote true##git push autosetupremote
git config rebase.autoStash true##git autostash
git diff master...branch##git compare branches
git rebase -i HEAD~2##git squash
gpg --export -a "Your Name" > your.key##gpg export key
gpg --full-generate-key##gpg generate key
ip route | grep docker0 | awk '{print $9}'##docker internal ip
keepassxc-cli show Safe.kdbx mongo##get password from keepass
kill %1##kill background process
lsb_release -a##ubuntu version
lsof -i##network activity at the moment
lsof -P -i -n##Apps that use internet connection at the moment
mount -t tmpfs tmpfs /mnt -o size=1024m##Mount ramdisk
mplayer -ao pcm -vo null -vc dummy -dumpaudio -dumpfile <output-file> <input-file>##Rip just audio track from video file
nc -v -l 80 < file.ext##Share/serve file using netcat
openssl rsa -in keyfile -out keyfile##decrypt rsa file
ping -i 60 -a <ip>##alarm when ip is online
pip install git+https://github.com/##pip install from git
python -m base64 -h##base64
python -m cProfile -o temp.dat##profile python
python -m gzip --decompress pypi.db.gz##ungzip
python -m zipfile -e archive.zip /path##zip
python3 -mpip install --user##pip install user
python3 -mpip install user
reset; stty sane; tput rs1; clear; echo -e "\033c"##reset terminall
rsync --exclude-from=.rsyncignore##rsync ingore file
shuf -n 1 /usr/share/dict/words##random word
shuf -n6 /usr/share/dict/words##xkcd password
sqlformat --reindent --keywords upper --identifiers lower -##pipe format sql from sqlparse
sqlformat --reindent --keywords upper --identifiers lower -##sql format
sudo service nginx reload##restart nginx
TZ=UTC+24##timezone 24 hours ago
uv run pytest##run pytest
uvx cookiecutter gh:user/project##run cookiecutter
while inotifywait -e close_write myfile.py; do ./myfile.py; done##run on file change
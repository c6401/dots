# espanso match file

# For a complete introduction, visit the official docs at: https://espanso.org/docs/

# You can use this file to define the base matches (aka snippets)
# that will be available in every application when using espanso.

# Matches are substitution rules: when you type the "trigger" string
# it gets replaced by the "replace" string.
matches:
  # Simple text replacement
  - trigger: ":espanso"
    replace: "Hi there!"

  # NOTE: espanso uses YAML to define matches, so pay attention to the indentation!

  # But matches can also be dynamic:

  # Print the current date
  - trigger: ":date"
    replace: "{{mydate}}"
    vars:
      - name: mydate
        type: date
        params:
          format: "%Y-%m-%d"

  # Print the output of a shell command
  - trigger: ":shell"
    replace: "{{output}}"
    vars:
      - name: output
        type: shell
        params:
          cmd: "echo 'Hello from your shell'"
  - trigger: ":shr"
    replace: "¯\\_(ツ)_/¯"
  - trigger: ":arrowup"
    replace: "↑"
  - trigger: ":arrowdown"
    replace: "↓"
  - trigger: ":dt"
    replace: "{{output}}"
    vars:
      - name: output
        type: date
        params:
          format: "%y%m%d"
  - trigger: ":uuid"
    replace: "{{output}}"
    vars:
      - name: output
        type: shell
        params:
          cmd: python -c 'print(__import__("uuid").uuid4())'
  - trigger: ":uid"
    replace: "{{output}}"
    vars:
      - name: output
        type: shell
        params:
          cmd: python -c 'print(str(__import__("uuid").uuid4())[:8])'
  - trigger: ":xkcd"
    replace: "{{output}}"
    vars:
      - name: output
        type: shell
        params:
           cmd: python -c 'import secrets, pathlib; print(" ".join(secrets.choice( pathlib.Path("/usr/share/dict/words").read_text().splitlines() ) for i in range(8)).lower())'
